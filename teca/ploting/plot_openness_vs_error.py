
import numpy as np
import matplotlib.lines as mlines
import matplotlib.pyplot as plt

fig_save_file = '/home/dimitrios/Documents/MyPublications:Journals-Conferences/Journal_IPM-Elsevier/diagrams/MacroPRC11AVG_RFSE_OCSVME_SANTINIS.eps'

# RFSE MIX W3G
y1 = np.array([
    0.504537166951,
    0.459775297414,
    0.435820227359875,
    0.433543575739125,
    0.418216515104125,
    0.44848347393325,
    0.516012836264375,
])

y1_error = np.array([
    0.013213923152201,
    0.008394311385993,
    0.0099005871314,
    0.015815273325642,
    0.007660901130625,
    0.002957123677508,
    0.004640226843825,
])

# RFSE MIX C4G
y2 = np.array([
    0.606809819445125,
    0.563363579451125,
    0.483991799693375,
    0.46245892979625,
    0.449451797229625,
    0.461802160828875,
    0.029031563713188,
])

y2_error = np.array([
    0.010503502280323,
    0.011823286219302,
    0.012267229932922,
    0.018461471968733,
    0.009717260261781,
    0.005060293806997,
    0.002523652974324,
])

# RFSE MIX W1G
y3 = np.array([
    0.587946875163,
    0.531888089813125,
    0.476061870587375,
    0.489711871941875,
    0.4392060576415,
    0.445438822046375,
    0.025431983374613,
])

y3_error = np.array([
    0.011879750997031,
    0.009577036188584,
    0.013697951996769,
    0.013233551594868,
    0.007786536931728,
    0.004036728404611,
    0.001055770908576,
])

# RFSE MinMax W3G
y4 = np.array([
    0.393492053010143,
    0.354719968456375,
    0.425529135746714,
    0.42786531356825,
    0.42900745054225,
    0.468838159726125,
    0.572445843170625,
])

y4_error = np.array([
    0.024331747687014,
    0.013577635774508,
    0.016739387550003,
    0.021245801582203,
    0.018322149895165,
    0.025202478030844,
    0.015551111825232,
])

# RFSE MinMax C4G
y5 = np.array([
    0.61003532320625,
    0.588431249312875,
    0.523355717377375,
    0.504698454367125,
    0.486427767863625,
    0.4895481380105,
    0.208341019525325,
])

y5_error = np.array([
    0.008810966295411,
    0.008510240300551,
    0.00727065760614,
    0.013831538195898,
    0.014560208641982,
    0.010653139172438,
    0.086398785298269,
])

# RFSE MinMax W1G
y6 = np.array([
    0.462547572825375,
    0.4742836949735,
    0.46189704006225,
    0.480350449427125,
    0.486605482093875,
    0.478790421997125,
    0.380930007190225,
])

y6_error = np.array([
    0.008385233824353,
    0.011488519049829,
    0.013394387899639,
    0.011713739106359,
    0.01867728538781,
    0.007771254971296,
    0.080587878302566,
])

# OCSVME 0.1 W3G
y7 = np.array([
    0.401202203582875,
    0.375082202036,
    0.352064426404375,
    0.365448760066,
    0.389217787859375,
    0.416933104609375,
    0.54232691665275,
])

y7_error = np.array([
    0.009168994099127,
    0.006797399023554,
    0.006260564326361,
    0.004237156144021,
    0.007993246018433,
    0.006953041431902,
    0.009695307456097,
])

# OCSVME 0.1 C4G
y8 = np.array([
    0.43485932503625,
    0.41961856305475,
    0.407525296464,
    0.40620631350725,
    0.409727741809125,
    0.456038689645125,
    0.5503592093395,
])

y8_error = np.array([
    0.006824965128036,
    0.006313938533785,
    0.014069671374967,
    0.017116104465627,
    0.016168275628241,
    0.014987006895894,
    0.012686944322725,
])


# OCSVME 0.1 W1G
y9 = np.array([
    0.37837552265025,
    0.377792848565,
    0.36281932861725,
    0.37648969335875,
    0.374609810840375,
    0.442335409021375,
    0.5271159324145,
])

y9_error = np.array([
    0.011500918685202,
    0.011415823844188,
    0.010762134786717,
    0.019587246891835,
    0.010955508877446,
    0.008539374899459,
    0.011571522497443,
])

# OCSVME 0.07 W3G
y10 = np.array([
    0.381972409916875,
    0.354653944263,
    0.341097681760375,
    0.3553822750875,
    0.382953145863,
    0.41312655030375,
    0.542833418945375,
])

y10_error = np.array([
    0.010791282968398,
    0.008649082093516,
    0.005364695384651,
    0.004754209468205,
    0.007269105661971,
    0.007344602849155,
    0.009565825139105,
])

# OCSVME 0.07 C4G
y11 = np.array([
    0.41896377892625,
    0.3984967421845,
    0.402681636183375,
    0.41002337096475,
    0.409281195818375,
    0.453252064608,
    0.549360162107875,
])

y11_error = np.array([
    0.008176156439748,
    0.006986072707083,
    0.015410975437733,
    0.018746191127425,
    0.016157904722526,
    0.013500240466628,
    0.013115681046355,
])

# OCSVME 0.07 W1G
y12 = np.array([
    0.381278662692625,
    0.377263071283625,
    0.360692521788,
    0.371771753800875,
    0.375264933191,
    0.442322881511,
    0.528263346208375,
])

y12_error = np.array([
    0.010173676387132,
    0.011835015553348,
    0.011658251035804,
    0.018901783433439,
    0.012438758633702,
    0.008555294293581,
    0.012010331990691,
])

x_openness_leves = np.array([
    0.065,
    0.134,
    0.209,
    0.293,
    0.388,
    0.500,
    0.646,
])

# Original Opennes Levels with Target variable in the equation.
#    0.069,
#    0.152,
#    0.251,
#    0.368,
#    0.503,
#    0.657,
#    0.825
#
#    0.125,
#    0.250,
#    0.375,
#    0.500,
#    0.625,
#    0.750,
#    0.875


# RFSE MIX W3G, C4G, W1G
yp1 = np.array([
    0.542302317851375,
    0.45079807182725,
    0.37762845895925,
    0.355489862584,
    0.318647658415,
    0.35405657313325,
    0.504357931208375,
])

yp1_error = np.array([
    0.007150339790545,
    0.004792805261858,
    0.014795758137565,
    0.011389629726577,
    0.008112376086755,
    0.001676173703646,
    0.000967646895464,
])

yp2 = np.array([
    0.561574643945125,
    0.479994048664375,
    0.385681368445875,
    0.360725443953875,
    0.345312708723625,
    0.368465855643375,
    0.014974259391025,
])

yp2_error = np.array([
    0.021358141905824,
    0.020848515235038,
    0.016682708356955,
    0.021996219560818,
    0.016620273974152,
    0.010683865123894,
    0.001344512412838,
])

yp3 = np.array([
    0.636274430804375,
    0.524159891050625,
    0.407202216107125,
    0.405457299342125,
    0.328487959229875,
    0.35091538938975,
    0.013052044746913,
])

yp3_error = np.array([
    0.023685993452825,
    0.015479329779859,
    0.01738553801309,
    0.01749353282214,
    0.007522767307059,
    0.001518259139573,
    0.000556624351812,
])

# RFSE MinMax W3G, C4G, W1G
yp4 = np.array([
    0.62446706559425,
    0.53462311713175,
    0.497390017929714,
    0.501730770484,
    0.405392034661875,
    0.40908764243025,
    0.508660829879375,
])

yp4_error = np.array([
    0.026473740160307,
    0.028156666697835,
    0.020711915275858,
    0.026142917067548,
    0.018197042676176,
    0.018593953721259,
    0.001819930228743,
])

yp5 = np.array([
    0.634722310951875,
    0.5564726457385,
    0.4708136198925,
    0.43457113659775,
    0.3974763738915,
    0.40375811191925,
    0.200051641398425,
])

yp5_error = np.array([
    0.012325377470133,
    0.017520682078707,
    0.019504482632162,
    0.022951105163014,
    0.027130332023976,
    0.028402477775077,
    0.089717109150452,
])

yp6 = np.array([
    0.74472673167275,
    0.67367753529325,
    0.6017702326435,
    0.517292924379875,
    0.416130271484125,
    0.36854554811825,
    0.381522124277007,
])

yp6_error = np.array([
    0.024665145040545,
    0.013592167092723,
    0.014365368214832,
    0.022444764917127,
    0.020080271498721,
    0.005176070315096,
    0.081971222020018,
])


fig = plt.figure(num=1, figsize=(12, 7), facecolor='w', edgecolor='k')  # dpi=300,
ax = fig.add_subplot(111)

linestyle = {
    "linestyle": "-",
    "marker": "o",
    "linewidth": 2,
    "markeredgewidth": 2,
    'markeredgecolor': 'white',
    "elinewidth": 1,
    "capsize": 4
}


linestyle['color'] = 'orange'
ax.errorbar(x_openness_leves, y1, yerr=y1_error, **linestyle)

linestyle['color'] = 'green'
linestyle['linestyle'] = "--"
ax.errorbar(x_openness_leves, y2, yerr=y2_error, **linestyle)

linestyle['color'] = 'purple'
linestyle['linestyle'] = "-."
ax.errorbar(x_openness_leves, y4, yerr=y4_error, **linestyle)

linestyle['color'] = 'black'
linestyle['linestyle'] = "-"
ax.errorbar(x_openness_leves, y5, yerr=y5_error, **linestyle)

"""
linestyle['color'] = 'lime'
ax.errorbar(x_openness_leves, yp5, yerr=yp5_error, **linestyle)

linestyle['color'] = 'red'
ax.errorbar(x_openness_leves, yp6, yerr=yp6_error, **linestyle)
"""
ax.yaxis.grid()

ln1 = mlines.Line2D(
    [], [], markersize=0, linewidth=3, color='orange', linestyle='-'
)
ln2 = mlines.Line2D(
    [], [], markersize=0, linewidth=3, color='green', linestyle='--'
)
ln3 = mlines.Line2D(
    [], [], markersize=0, linewidth=3, color='purple', linestyle='-.'
)
ln4 = mlines.Line2D(
    [], [], markersize=0, linewidth=3, color='black', linestyle='-'
)
ln5 = mlines.Line2D(
    [], [], markersize=0, linewidth=3, color='lime', linestyle='-'
)
ln6 = mlines.Line2D(
    [], [], markersize=0, linewidth=3, color='red', linestyle='-'
)
# lndump = mlines.Line2D([], [], markersize=0, linewidth=0)

plt.legend(
    [
        ln1, ln2,
        ln3, ln4,
        # ln5, ln6
    ],
    [
        "W3G - Comb",
        "C4G - Comb",
        "W3G - MinMax",
        "C4G - MinMax",
        # "RFSE - Combination of Cosine & MinMax",
        # "RFSE - MinMax",
        # "OCSVM",
        # "W3G - MinMax",
        # "C4G - MinMax",
        # "W1G - MinMax",
    ],
    bbox_to_anchor=(0.0, 1.01, 1.0, 0.101),
    loc=3, ncol=4, mode="expand", borderaxespad=0.0,
    fancybox=False, shadow=False, fontsize=14
).get_frame().set_linewidth(0.0)

plt.yticks(fontsize=12)
plt.xticks([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7], fontsize=12)
# plt.xticks(x_openness_leves, fontsize=12)
plt.ylabel('F1-measure', fontsize=14)
plt.xlabel('Openness Level', fontsize=14)
# plt.tight_layout()

# Saving the ploting to File
# plt.savefig(fig_save_file, bbox_inches='tight')

plt.show()
